@startuml Blackjack

class Game {
  -array<int,Player> players
  -Dealer dealer

  +__construct()
  +play()
  -set()
  -start()
  -action()
  -result()
  -end()
}

class Deck {
  -array<int,array<string,int|string>> deck

  +__construct()
  +getDeck()
  +initDeck()
  +takeACard()
}

class Card {
  -CARD_SCORE

  -array suits
  +createNewDeck()
}

abstract Player {
  -string name
  -array<int,array<string,int|string>> hand
  -int scoreTotal
  -int countAce
  -string status

  +{abstract} action()
  +{abstract} selectHitOrStand()

  +__construct()
  +getName()
  +getHand()
  +getScoreTotal()
  +getStatus()
  +addACardToHand()
  +calcScoreTotal()
  -calcAceScore()
  +changeStatus()
}

class Dealer {
  -NUM_OF_FIRST_HAND

  +dealOutFirstHand()
  +dealOneCard()
  +checkBurst()
  +judgeWinOrLose()
  -hasStand()
  -compareScoreTotal()

  +action()
  +selectHitOrStand()
}

class ManualPlayer {
  +action()
  +selectHitOrStand()
}

class AutoPlayer {
  +action()
  +selectHitOrStand()
}

class Message {
  +getSettingMessage()
  +getInputNumOfPlayerMessage()
  +getSettingInputErrorMessage()

  +getStartMessage()
  +getFirstHandMessage()
  +getDealerFirstHandMessage()
  +getLoseByBurstMessage()

  +getProgressMessage()
  +getProgressQuestionMessage()
  +getCardDrawnMessage()
  +getInputErrorMessage()

  +getScoreTotalResultMessage()
  +getStandMessage()
  +getDealerBurstMessage()
  +getWinByBurstMessage()
  +getResultMessage()

  +getEndMessage()
}

Game -- Deck
Deck *-- Card
Game -- Dealer
Game -- ManualPlayer
Game -- AutoPlayer
Dealer --|> Player
ManualPlayer --|> Player
AutoPlayer --|> Player
Game --- Message


@enduml
